<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bocadito Coin</title>
    <style>
        :root {
            --azul: #2A5C82;
            --azul-claro: #E8F1F5;
        }
        
        * {
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
            margin: 0;
            padding: 0;
        }

        body {
            background: var(--azul-claro);
            min-height: 100vh;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }

        .logo {
            width: 200px;
            display: block;
            margin: 20px auto;
        }

        .login-box {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button {
            background: var(--azul);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            margin: 5px 0;
        }

        .stats {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .stat-box {
            background: white;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            flex: 1;
            margin: 0 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .dropdown {
            position: relative;
            margin: 10px 0;
        }

        .dropdown-btn {
            background: var(--azul);
            color: white;
            width: 100%;
            text-align: left;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background: white;
            width: 100%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            z-index: 1;
        }

        .producto {
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .carrito {
            background: white;
            margin: 20px 0;
            padding: 15px;
            border-radius: 10px;
            max-height: 300px;
            overflow-y: auto;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .item-carrito {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .cantidad-control {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .botones-inferiores {
            display: flex;
            gap: 10px;
            position: fixed;
            bottom: 20px;
            left: 20px;
            right: 20px;
        }

        .botones-inferiores button {
            flex: 1;
        }
    </style>
</head>
<body>
    <!-- Página de Login -->
    <div id="loginPage" class="container">
        <img src="logo.png" alt="Logo" class="logo">
        <div class="login-box">
            <input type="email" id="email" placeholder="Correo electrónico">
            <input type="password" id="password" placeholder="Contraseña">
            <button onclick="login()">Iniciar sesión</button>
            <button onclick="recuperarContraseña()">Recuperar contraseña</button>
        </div>
    </div>

    <!-- Página Principal -->
    <div id="mainPage" class="container" style="display: none;">
        <div class="stats">
            <div class="stat-box">
                <h3>Puntos</h3>
                <p id="puntos">0</p>
            </div>
            <div class="stat-box">
                <h3>Visitas</h3>
                <p id="visitas">0</p>
            </div>
        </div>

        <div id="menuDropdowns"></div>

        <div class="carrito" id="carrito">
            <!-- Productos del carrito aparecerán aquí -->
        </div>

        <div class="botones-inferiores">
            <button onclick="llamar()">📞 Llamar</button>
            <button onclick="enviarPedido()">✅ Enviar Pedido</button>
            <button onclick="reservar()">📅 Reservar</button>
        </div>
    </div>

<script>
    async function login() {
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();

    if (!email || !password) {
        alert('⚠️ Por favor, ingresa tu correo y contraseña.');
        return;
    }

    try {
        // Realizar la consulta a Baserow
        const response = await axios.get(
            `https://api.baserow.io/api/database/rows/table/${BASEROW_CONFIG.CLIENTES.ID_TABLA}/`, 
            {
                params: {
                    user_field_names: true, // Para usar nombres reales de los campos
                },
                headers: {
                    Authorization: `Token ${BASEROW_CONFIG.TOKEN}`
                }
            }
        );

        console.log("🔍 Respuesta completa de Baserow:", response.data); // Debug

        // Buscar manualmente el usuario dentro de la respuesta
        const usuario = response.data.results.find(user => 
            user[BASEROW_CONFIG.CLIENTES.CAMPOS.EMAIL] === email &&
            user[BASEROW_CONFIG.CLIENTES.CAMPOS.CONTRASEÑA] === password
        );

        if (usuario) {
            console.log("✅ Usuario autenticado:", usuario);

            document.getElementById('loginPage').style.display = 'none';
            document.getElementById('mainPage').style.display = 'block';

            // Mostrar datos del usuario
            document.getElementById('puntos').textContent = usuario[BASEROW_CONFIG.CLIENTES.CAMPOS.PUNTOS] || '0';
            document.getElementById('visitas').textContent = usuario[BASEROW_CONFIG.CLIENTES.CAMPOS.VISITAS] || '0';

            await cargarMenu();
        } else {
            alert('⚠️ Credenciales incorrectas o usuario no existe');
        }

    } catch (error) {
        console.error("🚨 Error en login:", error.response?.data || error.message);
        alert('🚨 Error de conexión con el servidor');
    }
}

    function groupBy(array, key) {
        return array.reduce((result, item) => {
            (result[item[key]] = result[item[key]] || []).push(item);
            return result;
        }, {});
    }

    async function cargarMenu() {
        try {
            const response = await axios.get(
                `https://api.baserow.io/api/database/rows/table/${BASEROW_CONFIG.CARTA.ID_TABLA}/`, 
                {
                    params: { 
                        user_field_names: true,
                        include: [
                            BASEROW_CONFIG.CARTA.CAMPOS.NOMBRE,
                            BASEROW_CONFIG.CARTA.CAMPOS.TIPO,
                            BASEROW_CONFIG.CARTA.CAMPOS.PRECIO
                        ]
                    },
                    headers: { 
                        Authorization: `Token ${BASEROW_CONFIG.TOKEN}` 
                    }
                }
            );

            console.log("Menú cargado:", response.data.results); // Depuración

            // Verifica si la respuesta contiene datos
            if (response.data.results.length === 0) {
                alert("⚠️ No hay productos disponibles en el menú.");
                return;
            }

            // Agrupar los productos por su tipo
            menuData = groupBy(response.data.results, BASEROW_CONFIG.CARTA.CAMPOS.TIPO);

            // Generar los dropdowns en la interfaz
            generarDropdowns(menuData);
        } catch (error) {
            console.error("Error cargando menú:", error);
            alert('Error cargando el menú');
        }
    }

    function generarDropdowns(menuData) {
        const menuContainer = document.getElementById("menuDropdowns");
        menuContainer.innerHTML = ""; // Limpiar contenido previo

        Object.keys(menuData).forEach(tipo => {
            const dropdown = document.createElement("div");
            dropdown.classList.add("dropdown");

            const dropdownBtn = document.createElement("button");
            dropdownBtn.classList.add("dropdown-btn");
            dropdownBtn.textContent = tipo;
            dropdownBtn.onclick = function () {
                const content = this.nextElementSibling;
                content.style.display = content.style.display === "block" ? "none" : "block";
            };

            const dropdownContent = document.createElement("div");
            dropdownContent.classList.add("dropdown-content");

            menuData[tipo].forEach(producto => {
                const item = document.createElement("div");
                item.classList.add("producto");
                item.textContent = `${producto[BASEROW_CONFIG.CARTA.CAMPOS.NOMBRE]} - ${producto[BASEROW_CONFIG.CARTA.CAMPOS.PRECIO]}€`;
                item.onclick = () => agregarAlCarrito(producto);
                dropdownContent.appendChild(item);
            });

            dropdown.appendChild(dropdownBtn);
            dropdown.appendChild(dropdownContent);
            menuContainer.appendChild(dropdown);
        });
    }

    function agregarAlCarrito(producto) {
        const carrito = document.getElementById("carrito");

        const itemCarrito = document.createElement("div");
        itemCarrito.classList.add("item-carrito");
        itemCarrito.innerHTML = `
            <span>${producto[BASEROW_CONFIG.CARTA.CAMPOS.NOMBRE]}</span>
            <span>${producto[BASEROW_CONFIG.CARTA.CAMPOS.PRECIO]}€</span>
        `;

        carrito.appendChild(itemCarrito);
    }
</script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>
</html>
