<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bocadito Coin</title>
    <style>
        :root {
            --azul: #2A5C82;
            --azul-claro: #E8F1F5;
        }
        
        * {
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
            margin: 0;
            padding: 0;
        }

        body {
            background: var(--azul-claro);
            min-height: 100vh;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }

        .logo {
            width: 200px;
            display: block;
            margin: 20px auto;
        }

        .login-box {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button {
            background: var(--azul);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            margin: 5px 0;
        }

        .stats {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .stat-box {
            background: white;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            flex: 1;
            margin: 0 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .dropdown {
            position: relative;
            margin: 10px 0;
        }

        .dropdown-btn {
            background: var(--azul);
            color: white;
            width: 100%;
            text-align: left;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background: white;
            width: 100%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            z-index: 1;
        }

        .producto {
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .carrito {
            background: white;
            margin: 20px 0;
            padding: 15px;
            border-radius: 10px;
            max-height: 300px;
            overflow-y: auto;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .item-carrito {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .cantidad-control {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .botones-inferiores {
            display: flex;
            gap: 10px;
            position: fixed;
            bottom: 20px;
            left: 20px;
            right: 20px;
        }

        .botones-inferiores button {
            flex: 1;
        }
    </style>
</head>
<body>
    <!-- PÃ¡gina de Login -->
    <div id="loginPage" class="container">
        <img src="tu_logo.png" alt="Logo" class="logo">
        <div class="login-box">
            <input type="email" id="email" placeholder="Correo electrÃ³nico">
            <input type="password" id="password" placeholder="ContraseÃ±a">
            <button onclick="login()">Iniciar sesiÃ³n</button>
            <button onclick="recuperarContraseÃ±a()">Recuperar contraseÃ±a</button>
        </div>
    </div>

    <!-- PÃ¡gina Principal -->
    <div id="mainPage" class="container" style="display: none;">
        <div class="stats">
            <div class="stat-box">
                <h3>Puntos</h3>
                <p id="puntos">0</p>
            </div>
            <div class="stat-box">
                <h3>Visitas</h3>
                <p id="visitas">0</p>
            </div>
        </div>

        <div id="menuDropdowns"></div>

        <div class="carrito" id="carrito">
            <!-- Productos del carrito aparecerÃ¡n aquÃ­ -->
        </div>

        <div class="botones-inferiores">
            <button onclick="llamar()">ðŸ“ž Llamar</button>
            <button onclick="enviarPedido()">âœ… Enviar Pedido</button>
            <button onclick="reservar()">ðŸ“… Reservar</button>
        </div>
    </div>

    <script>
        let usuario = null;
        let carrito = [];
        let menuData = {};

        async function login() {
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            
            try {
                const response = await axios.get('https://api.baserow.io/api/database/rows/table/420235/', {
                    params: {
                        filter__field_3224473__equal: email,
                        filter__field_3224275__equal: password,
                        user_field_names: true
                    },
                    headers: {
                        Authorization: 'e1gj8PHAdmpO8c9ILZIqUU9sgT4LrhXD'
                    }
                });

                if(response.data.results.length > 0) {
                    usuario = response.data.results[0];
                    document.getElementById('loginPage').style.display = 'none';
                    document.getElementById('mainPage').style.display = 'block';
                    cargarDatosUsuario();
                    cargarMenu();
                } else {
                    alert('Credenciales incorrectas');
                }
            } catch (error) {
                console.error(error);
                alert('Error al iniciar sesiÃ³n');
            }
        }

        function cargarDatosUsuario() {
            document.getElementById('puntos').textContent = usuario['Puntos Cliente'];
            document.getElementById('visitas').textContent = usuario['NÃºmero de pedidos'];
        }

        async function cargarMenu() {
            try {
                const response = await axios.get('https://api.baserow.io/api/database/rows/table/420254/', {
                    params: { user_field_names: true },
                    headers: { Authorization: 'Token YOUR_DATABASE_TOKEN' }
                });
                
                menuData = groupBy(response.data.results, 'Tipo');
                generarDropdowns();
            } catch (error) {
                console.error(error);
            }
        }

        function groupBy(array, key) {
            return array.reduce((result, item) => {
                (result[item[key]] = result[item[key]] || []).push(item);
                return result;
            }, {});
        }

        function generarDropdowns() {
            const contenedor = document.getElementById('menuDropdowns');
            contenedor.innerHTML = '';
            
            for(const categoria in menuData) {
                const dropdownHTML = `
                    <div class="dropdown">
                        <button class="dropdown-btn">${categoria}</button>
                        <div class="dropdown-content">
                            ${menuData[categoria].map(plato => `
                                <div class="producto" onclick="agregarAlCarrito(${plato.id})">
                                    ${plato.Nombre} - ${plato['Precio normal â‚¬']}â‚¬
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `;
                contenedor.innerHTML += dropdownHTML;
            }

            // Mostrar/ocultar dropdowns
            document.querySelectorAll('.dropdown-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    this.nextElementSibling.style.display = 
                        this.nextElementSibling.style.display === 'block' ? 'none' : 'block';
                });
            });
        }

        function agregarAlCarrito(platoId) {
            const plato = Object.values(menuData).flat().find(p => p.id === platoId);
            const existente = carrito.find(item => item.plato.id === platoId);
            
            if(existente) {
                existente.cantidad++;
            } else {
                carrito.push({ plato, cantidad: 1 });
            }
            
            actualizarCarrito();
        }

        function actualizarCarrito() {
            const contenedor = document.getElementById('carrito');
            contenedor.innerHTML = carrito.map(item => `
                <div class="item-carrito">
                    <div>${item.plato.Nombre}</div>
                    <div class="cantidad-control">
                        <button onclick="cambiarCantidad(${item.plato.id}, -1)">-</button>
                        <span>${item.cantidad}</span>
                        <button onclick="cambiarCantidad(${item.plato.id}, 1)">+</button>
                    </div>
                </div>
            `).join('');
        }

        function cambiarCantidad(platoId, delta) {
            const item = carrito.find(item => item.plato.id === platoId);
            item.cantidad += delta;
            
            if(item.cantidad < 1) {
                carrito = carrito.filter(i => i !== item);
            }
            
            actualizarCarrito();
        }

        async function enviarPedido() {
            const pedido = {
                usuario: usuario,
                productos: carrito,
                fecha: new Date().toISOString()
            };

            try {
                const response = await axios.post('TU_WEBHOOK_PEDIDOS', {
                    accion: 'realizarPedido',
                    ...pedido
                });
                
                if(response.data.ok) {
                    alert('Pedido realizado con Ã©xito');
                    carrito = [];
                    actualizarCarrito();
                }
            } catch (error) {
                console.error(error);
                alert('Error al enviar el pedido');
            }
        }

        function recuperarContraseÃ±a() {
            const email = document.getElementById('email').value;
            if(email) {
                axios.post('TU_WEBHOOK_RECUPERACION', { email });
                alert('Se ha enviado un correo para recuperar tu contraseÃ±a');
            }
        }

        // Funciones auxiliares
        function llamar() { window.location.href = 'tel:' + usuario.TelÃ©fono; }
        function reservar() { window.location.href = 'tu_url_reservas'; }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>
</html>
