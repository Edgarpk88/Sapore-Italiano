<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bocadito Coin</title>
    <style>
        :root {
            --azul: #2A5C82;
            --azul-claro: #E8F1F5;
        }
        
        * {
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
            margin: 0;
            padding: 0;
        }

        body {
            background: var(--azul-claro);
            min-height: 100vh;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }

        .logo {
            width: 200px;
            display: block;
            margin: 20px auto;
        }

        .login-box {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button {
            background: var(--azul);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            margin: 5px 0;
        }

        .stats {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .stat-box {
            background: white;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            flex: 1;
            margin: 0 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .dropdown {
            position: relative;
            margin: 10px 0;
        }

        .dropdown-btn {
            background: var(--azul);
            color: white;
            width: 100%;
            text-align: left;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background: white;
            width: 100%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            z-index: 1;
        }

        .producto {
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .carrito {
            background: white;
            margin: 20px 0;
            padding: 15px;
            border-radius: 10px;
            max-height: 300px;
            overflow-y: auto;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .item-carrito {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .cantidad-control {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .botones-inferiores {
            display: flex;
            gap: 10px;
            position: fixed;
            bottom: 20px;
            left: 20px;
            right: 20px;
        }

        .botones-inferiores button {
            flex: 1;
        }
    </style>
</head>
<body>
    <!-- P√°gina de Login -->
    <div id="loginPage" class="container">
        <img src="logo.png" alt="Logo" class="logo">
        <div class="login-box">
            <input type="email" id="email" placeholder="Correo electr√≥nico">
            <input type="password" id="password" placeholder="Contrase√±a">
            <button onclick="login()">Iniciar sesi√≥n</button>
            <button onclick="recuperarContrase√±a()">Recuperar contrase√±a</button>
        </div>
    </div>

    <!-- P√°gina Principal -->
    <div id="mainPage" class="container" style="display: none;">
        <div class="stats">
            <div class="stat-box">
                <h3>Puntos</h3>
                <p id="puntos">0</p>
            </div>
            <div class="stat-box">
                <h3>Visitas</h3>
                <p id="visitas">0</p>
            </div>
        </div>

        <div id="menuDropdowns"></div>

        <div class="carrito" id="carrito">
            <!-- Productos del carrito aparecer√°n aqu√≠ -->
        </div>

        <div class="botones-inferiores">
            <button onclick="llamar()">üìû Llamar</button>
            <button onclick="enviarPedido()">‚úÖ Enviar Pedido</button>
            <button onclick="reservar()">üìÖ Reservar</button>
        </div>
    </div>

<script>
    // CONFIGURACI√ìN ACTUALIZADA CON NOMBRES REALES DE CAMPOS
    const BASEROW_CONFIG = {
        CLIENTES: {
            ID_TABLA: 420235,
            CAMPOS: {
                // NOMBRES REALES DE LOS CAMPOS EN BASEROW
                EMAIL: "Email",         // Nombre real del campo (ID 3224265)
                CONTRASE√ëA: "Contrase√±a", // Nombre real (ID 3224275)
                PUNTOS: "Puntos Cliente", // Nombre real (ID 3224318)
                VISITAS: "N√∫mero de pedidos" // Nombre real (ID 3224308)
            }
        },
        CARTA: {
            ID_TABLA: 420254,
            CAMPOS: {
                NOMBRE: "Nombre",      // Nombre real (ID 3224509)
                TIPO: "Tipo",          // Nombre real (ID 3224510)
                PRECIO: "Precio normal ‚Ç¨" // Nombre real (ID 3224516)
            }
        },
        TOKEN: 'e1gj8PHAdmpO8c9ILZIqUU9sgT4LrhXD' // ‚Üê Token v√°lido con permisos de lectura
    };

    async function login() {
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        
        try {
            const response = await axios.get(
                `https://api.baserow.io/api/database/rows/table/${BASEROW_CONFIG.CLIENTES.ID_TABLA}/`, 
                {
                    params: {
                        // FILTROS POR NOMBRE REAL DE CAMPOS
                        [`filter__${BASEROW_CONFIG.CLIENTES.CAMPOS.EMAIL}__equal`]: email,
                        [`filter__${BASEROW_CONFIG.CLIENTES.CAMPOS.CONTRASE√ëA}__equal`]: password,
                        user_field_names: true,
                        include: [  // Incluir campos necesarios
                            BASEROW_CONFIG.CLIENTES.CAMPOS.EMAIL,
                            BASEROW_CONFIG.CLIENTES.CAMPOS.PUNTOS,
                            BASEROW_CONFIG.CLIENTES.CAMPOS.VISITAS,
                            'Tel√©fono'  // Necesario para el bot√≥n de llamar
                        ]
                    },
                    headers: {
                        Authorization: `Token ${BASEROW_CONFIG.TOKEN}`
                    }
                }
            );

            if(response.data.results.length > 0) {
                usuario = response.data.results[0];
                console.log("Usuario autenticado:", usuario); // Depuraci√≥n
                
                document.getElementById('loginPage').style.display = 'none';
                document.getElementById('mainPage').style.display = 'block';
                
                // Mostrar datos usando nombres reales
                document.getElementById('puntos').textContent = usuario[BASEROW_CONFIG.CLIENTES.CAMPOS.PUNTOS];
                document.getElementById('visitas').textContent = usuario[BASEROW_CONFIG.CLIENTES.CAMPOS.VISITAS];
                
                await cargarMenu();
            } else {
                alert('‚ö†Ô∏è Credenciales incorrectas o usuario no existe');
            }
        } catch (error) {
            console.error("Error completo:", error.response?.data || error.message);
            alert('üö® Error de conexi√≥n con el servidor');
        }
    }

    async function cargarMenu() {
        try {
            const response = await axios.get(
                `https://api.baserow.io/api/database/rows/table/${BASEROW_CONFIG.CARTA.ID_TABLA}/`, 
                {
                    params: { 
                        user_field_names: true,
                        include: [  // Solo campos necesarios
                            BASEROW_CONFIG.CARTA.CAMPOS.NOMBRE,
                            BASEROW_CONFIG.CARTA.CAMPOS.TIPO,
                            BASEROW_CONFIG.CARTA.CAMPOS.PRECIO
                        ]
                    },
                    headers: { 
                        Authorization: `Token ${BASEROW_CONFIG.TOKEN}` 
                    }
                }
            );
            
            console.log("Men√∫ cargado:", response.data); // Depuraci√≥n
            menuData = groupBy(response.data.results, BASEROW_CONFIG.CARTA.CAMPOS.TIPO);
            generarDropdowns();
        } catch (error) {
            console.error("Error cargando men√∫:", error);
            alert('Error cargando el men√∫');
        }
    }
</script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    Dise√±ado por NeuroFay
</body>
</html>
