<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestor NFC Clientes</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 15px;
            background-color: #f8f9fa;
        }
        
        .button-container {
            display: grid;
            gap: 12px;
            margin-bottom: 20px;
        }
        
        button {
            padding: 18px;
            font-size: 16px;
            background-color: #4dabf7;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: background-color 0.3s;
        }
        
        button:active {
            background-color: #339af0;
        }
        
        .panel {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            min-height: 120px;
            max-height: 40vh;
            overflow-y: auto;
        }
        
        .form-container {
            display: none;
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 15px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        input {
            width: 100%;
            padding: 12px;
            margin-bottom: 15px;
            box-sizing: border-box;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            font-size: 16px;
        }
        
        .mini-btn {
            padding: 12px 20px;
            font-size: 14px;
            background-color: #74c0fc;
        }
        
        .data-field {
            margin-bottom: 10px;
            padding: 12px;
            background-color: #f8f9fa;
            border-radius: 6px;
            border: 1px solid #dee2e6;
        }
        
        .status-message {
            padding: 10px;
            margin: 8px 0;
            background-color: #e7f5ff;
            border-radius: 6px;
            animation: fadeOut 8s forwards;
        }
        
        @keyframes fadeOut {
            0% { opacity: 1; }
            90% { opacity: 1; }
            100% { opacity: 0; height: 0; padding: 0; margin: 0; }
        }
    </style>
</head>
<body>
    <div class="button-container">
        <button onclick="showForm('registrar')">Registrar</button>
        <button onclick="showForm('buscar')">Buscar</button>
        <button onclick="initScan()">Escanear</button>
    </div>

    <div id="registrarForm" class="form-container">
        <input type="text" placeholder="Nombre" id="nombre">
        <input type="tel" placeholder="Teléfono" id="telefono">
        <input type="email" placeholder="Email" id="email">
        <input type="text" placeholder="Dirección" id="direccion">
        <input type="text" placeholder="Descuento" id="descuento">
        <button class="mini-btn" onclick="registerClient()">OK</button>
    </div>

    <div id="buscarForm" class="form-container">
        <input type="text" placeholder="Nombre" id="buscarNombre">
        <input type="email" placeholder="Email" id="buscarEmail">
        <input type="tel" placeholder="Teléfono" id="buscarTelefono">
        <button class="mini-btn" onclick="searchClient()">OK</button>
    </div>

    <div class="panel" id="infoPanel"></div>
    <div class="panel" id="dataPanel"></div>

    <script>
        let nfcSupported = ('NDEFReader' in window);
        let pendingWriteData = null;
        let currentAction = null;

        function logInfo(message) {
            const panel = document.getElementById('infoPanel');
            const msgDiv = document.createElement('div');
            msgDiv.className = 'status-message';
            msgDiv.textContent = `${new Date().toLocaleTimeString()}: ${message}`;
            panel.prepend(msgDiv);
            
            // Mantener máximo 5 mensajes
            while(panel.children.length > 5) {
                panel.removeChild(panel.lastChild);
            }
        }

        function showForm(formType) {
            document.querySelectorAll('.form-container').forEach(f => f.style.display = 'none');
            document.getElementById(`${formType}Form`).style.display = 'block';
            currentAction = formType;
        }

        async function initNFC() {
            if (!nfcSupported) {
                logInfo("NFC no está disponible");
                return false;
            }
            
            try {
                await navigator.nfc.requestPermission();
                return true;
            } catch (error) {
                logInfo("Permiso NFC denegado");
                return false;
            }
        }

        async function registerClient() {
            const data = {
                name: document.getElementById('nombre').value,
                phone: document.getElementById('telefono').value,
                email: document.getElementById('email').value,
                direccion: document.getElementById('direccion').value,
                descuento: document.getElementById('descuento').value
            };

            try {
                const reader = new NDEFReader();
                await reader.write({
                    records: [{ 
                        recordType: "text", 
                        data: JSON.stringify(data),
                        mediaType: "application/json"
                    }]
                });
                
                logInfo("Datos guardados en chip");
                await sendWebhook('registrarCLIENTE', {
                    ...data,
                    timestamp: new Date().toISOString()
                });
                
            } catch (error) {
                logInfo(`Error: ${error.message}`);
            }
        }

        async function initScan() {
            if (!await initNFC()) return;
            
            try {
                const reader = new NDEFReader();
                await reader.scan();
                
                reader.onreading = async event => {
                    try {
                        const textDecoder = new TextDecoder();
                        const data = JSON.parse(textDecoder.decode(event.message.records[0].data));
                        
                        displayData(data);
                        await sendWebhook('actualizarCLIENTE', {
                            ...data,
                            serialNumber: event.serialNumber,
                            timestamp: new Date().toISOString()
                        });
                        
                        if (pendingWriteData) {
                            await writeDataToTag(pendingWriteData);
                            pendingWriteData = null;
                        }
                    } catch (error) {
                        logInfo("Error leyendo chip");
                    }
                };
                
                logInfo("Acerca el chip NFC...");
            } catch (error) {
                logInfo(`Error NFC: ${error.message}`);
            }
        }

        async function writeDataToTag(data) {
            try {
                const reader = new NDEFReader();
                await reader.write({
                    records: [{
                        recordType: "text",
                        data: JSON.stringify(data),
                        mediaType: "application/json"
                    }]
                });
                logInfo("Datos actualizados en chip");
            } catch (error) {
                logInfo(`Error escribiendo: ${error.message}`);
            }
        }

        async function searchClient() {
            const searchData = {
                name: document.getElementById('buscarNombre').value,
                email: document.getElementById('buscarEmail').value,
                phone: document.getElementById('buscarTelefono').value
            };
            
            await sendWebhook('buscarCLIENTE', searchData);
            logInfo("Busqueda completada");
        }

        function displayData(data) {
            const panel = document.getElementById('dataPanel');
            panel.innerHTML = '';
            
            const fields = ['name', 'phone', 'email', 'direccion', 'descuento', 'visitas'];
            fields.forEach(field => {
                if (data[field]) {
                    panel.innerHTML += `
                        <div class="data-field">
                            <strong>${field}:</strong> ${data[field]}
                        </div>
                    `;
                }
            });
        }

        async function sendWebhook(action, data) {
            try {
                logInfo("Enviando datos...");
                
                const controller = new AbortController();
                const timeoutId = setTimeout(() => controller.abort(), 70000);
                
                const response = await fetch('https://n8n-n8n.dlyqti.easypanel.host/webhook/fab43c1a-ef5d-43d8-ae52-3e2d891496dd', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ action, ...data }),
                    signal: controller.signal
                });
                
                clearTimeout(timeoutId);
                
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                
                const result = await response.json();
                if (result.length > 0) {
                    displayData(result[0]);
                    pendingWriteData = result[0];
                }
                logInfo("Datos recibidos");
                
            } catch (error) {
                logInfo(`Error webhook: ${error.message}`);
            }
        }

        // Inicialización
        if (!nfcSupported) {
            logInfo("NFC no soportado");
        } else {
            initNFC();
        }
    </script>
</body>
</html>
