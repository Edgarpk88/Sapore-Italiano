<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bocadito Coin</title>
    <style>
        :root {
            --azul: #2A5C82;
            --azul-claro: #E8F1F5;
        }
        
        * {
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
            margin: 0;
            padding: 0;
        }

        body {
            background: var(--azul-claro);
            min-height: 100vh;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }

        .logo {
            width: 200px;
            display: block;
            margin: 20px auto;
        }

        .login-box {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button {
            background: var(--azul);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            margin: 5px 0;
        }

        .stats {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .stat-box {
            background: white;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            flex: 1;
            margin: 0 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .dropdown {
            position: relative;
            margin: 10px 0;
        }

        .dropdown-btn {
            background: var(--azul);
            color: white;
            width: 100%;
            text-align: left;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background: white;
            width: 100%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            z-index: 1;
        }

        .producto {
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .carrito {
            background: white;
            margin: 20px 0;
            padding: 15px;
            border-radius: 10px;
            max-height: 300px;
            overflow-y: auto;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .item-carrito {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .cantidad-control {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .botones-inferiores {
            display: flex;
            gap: 10px;
            position: fixed;
            bottom: 20px;
            left: 20px;
            right: 20px;
        }

        .botones-inferiores button {
            flex: 1;
        }
    </style>
</head>
<body>
    <!-- Página de Login -->
    <div id="loginPage" class="container">
        <img src="logo.png" alt="Logo" class="logo">
        <div class="login-box">
            <input type="email" id="email" placeholder="Correo electrónico">
            <input type="password" id="password" placeholder="Contraseña">
            <button onclick="login()">Iniciar sesión</button>
            <button onclick="recuperarContraseña()">Recuperar contraseña</button>
        </div>
    </div>

    <!-- Página Principal -->
    <div id="mainPage" class="container" style="display: none;">
        <div class="stats">
            <div class="stat-box">
                <h3>Puntos</h3>
                <p id="puntos">0</p>
            </div>
            <div class="stat-box">
                <h3>Visitas</h3>
                <p id="visitas">0</p>
            </div>
        </div>

        <div id="menuDropdowns"></div>

        <div class="carrito" id="carrito">
            <!-- Productos del carrito aparecerán aquí -->
        </div>

        <div class="botones-inferiores">
            <button onclick="llamar()">📞 Llamar</button>
            <button onclick="enviarPedido()">✅ Enviar Pedido</button>
            <button onclick="reservar()">📅 Reservar</button>
        </div>
    </div>

   <script>
    // Configuración Baserow
    const BASEROW_CONFIG = {
        TABLAS: {
            CLIENTES: {
                ID: 420235,
                CAMPOS: {
                    EMAIL: 3224265,       // ID del campo Email
                    CONTRASEÑA: 3224275,  // ID del campo Contraseña
                    PUNTOS: 3224318,      // ID del campo Puntos Cliente
                    VISITAS: 3224308      // ID del campo Número de pedidos
                }
            },
            CARTA: {
                ID: 420254,
                CAMPOS: {
                    NOMBRE: 3224509,      // ID del campo Nombre
                    TIPO: 3224510,        // ID del campo Tipo
                    PRECIO: 3224516       // ID del campo Precio normal €
                }
            }
        },
        TOKEN: 'e1gj8PHAdmpO8c9ILZIqUU9sgT4LrhXD' // ← Tu token de Baserow aquí
    };

    async function login() {
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        
        try {
            const response = await axios.get(
                `https://api.baserow.io/api/database/rows/table/${BASEROW_CONFIG.TABLAS.CLIENTES.ID}/`, 
                {
                    params: {
                        // FILTRO POR EMAIL (ID 3224265)
                        [`filter__field_${BASEROW_CONFIG.TABLAS.CLIENTES.CAMPOS.EMAIL}__equal`]: email,
                        
                        // FILTRO POR CONTRASEÑA (ID 3224275)
                        [`filter__field_${BASEROW_CONFIG.TABLAS.CLIENTES.CAMPOS.CONTRASEÑA}__equal`]: password,
                        
                        user_field_names: true
                    },
                    headers: {
                        Authorization: `Token ${BASEROW_CONFIG.TOKEN}`
                    }
                }
            );

            if(response.data.results.length > 0) {
                usuario = response.data.results[0];
                document.getElementById('loginPage').style.display = 'none';
                document.getElementById('mainPage').style.display = 'block';
                
                // Cargar puntos (ID 3224318) y visitas (ID 3224308)
                document.getElementById('puntos').textContent = usuario['Puntos Cliente']; // Campo ID 3224318
                document.getElementById('visitas').textContent = usuario['Número de pedidos']; // Campo ID 3224308
                
                cargarMenu();
            } else {
                alert('Credenciales incorrectas');
            }
        } catch (error) {
            console.error(error);
            alert('Error al iniciar sesión');
        }
    }

    async function cargarMenu() {
        try {
            const response = await axios.get(
                `https://api.baserow.io/api/database/rows/table/${BASEROW_CONFIG.TABLAS.CARTA.ID}/`, 
                {
                    params: { 
                        user_field_names: true,
                        // Campos que necesitamos de la tabla Carta:
                        // - Nombre (ID 3224509)
                        // - Tipo (ID 3224510)
                        // - Precio normal € (ID 3224516)
                        include: ['Nombre', 'Tipo', 'Precio normal €'] 
                    },
                    headers: { 
                        Authorization: `Token ${BASEROW_CONFIG.TOKEN}` 
                    }
                }
            );
            
            menuData = groupBy(response.data.results, 'Tipo'); // Usando campo Tipo (ID 3224510)
            generarDropdowns();
        } catch (error) {
            console.error(error);
        }
    }

    function agregarAlCarrito(platoId) {
        const plato = Object.values(menuData).flat().find(p => p.id === platoId);
        const existente = carrito.find(item => item.plato.id === platoId);
        
        if(existente) {
            existente.cantidad++;
        } else {
            carrito.push({ 
                plato: {
                    id: plato.id,
                    nombre: plato.Nombre,       // Campo Nombre (ID 3224509)
                    precio: plato['Precio normal €'] // Campo Precio (ID 3224516)
                }, 
                cantidad: 1 
            });
        }
        
        actualizarCarrito();
    }
</script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>
</html>
